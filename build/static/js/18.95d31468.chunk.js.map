{"version":3,"sources":["ui-component/cards/MainCard.js","helpers/trim.js","views/reward/index.js"],"names":["headerSX","marginLeft","mr","MainCard","React","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","backgroundColor","variant","action","className","displayName","trim","number","precision","array","fromExponential","split","length","push","pop","substring","join","useStyles","makeStyles","theme","rewardView","minHeight","padding","palette","common","mainLight","borderRadius","textAlign","baseButton","minWidth","marginTop","margin","paddingRight","paddingLeft","fontSize","main","color","paper","Reward","classes","signer","useSigner","data","chain","useNetwork","rewardsInUnderwriting","useSelector","state","account","chainData","underwriting_reward","claimStakingReward","useWeb3Function","claimStakeReward","id","container","spacing","item","xs","display","justifyContent","alignItems","Number","md","my","onClick","to","mb","pathname","target","mx"],"mappings":"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","file":"static/js/18.95d31468.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { Card, CardContent, CardHeader, Typography } from '@material-ui/core';\r\n\r\n// constant\r\nconst headerSX = {\r\n    marginLeft: '30px',\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n//-----------------------|| CUSTOM MAIN CARD ||-----------------------//\r\n\r\nconst MainCard = React.forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass,\r\n            contentSX,\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    backgroundColor: 'rgb(252 253 253)',\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={<Typography variant='cardTitle'>{title}</Typography>} action={secondary} />}\r\n\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nMainCard.displayName = 'MainCard';\r\nexport default MainCard;\r\n","import fromExponential from \"from-exponential\";\r\n\r\nexport const trim = (number, precision) => {\r\n    const array = fromExponential(number).split(\".\");\r\n    if (array.length === 1) return fromExponential(number);\r\n    //@ts-ignore\r\n    array.push(array.pop().substring(0, precision));\r\n    const trimmedNumber = array.join(\".\");\r\n    return trimmedNumber;\r\n};\r\n","import React from 'react';\r\nimport { Card, Grid, Box, Typography, Button, TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\nimport MainCard from '../../ui-component/cards/MainCard';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { trim } from '../../helpers/trim';\r\nimport { useWeb3Function } from '../../hooks/useWeb3Function';\r\nimport { useNetwork, useSigner } from 'wagmi';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    rewardView: {\r\n        '& .MuiCard-root': {\r\n            minHeight: '256px',\r\n            padding: '20px',\r\n            backgroundColor: '#fff',\r\n            border: `1px solid ${theme.palette.common.mainLight}`\r\n        },\r\n        '& .MuiTableContainer-root': {\r\n            minHeight: '300px',\r\n            backgroundColor: '#fff',\r\n            borderRadius: '15px',\r\n            border: `1px solid ${theme.palette.common.mainLight}`,\r\n            '& .MuiTableCell-root': {\r\n                textAlign: 'center'\r\n            }\r\n        }\r\n    },\r\n    baseButton: {\r\n        minWidth: '200px',\r\n        marginTop: 20,\r\n        margin: 10,\r\n        paddingRight: 15,\r\n        paddingLeft: 15,\r\n        borderRadius: 15,\r\n        fontSize: '16px',\r\n        backgroundColor: theme.palette.common.main,\r\n        color: theme.palette.common.paper,\r\n        '&:hover': {\r\n            color: theme.palette.common.paper,\r\n            backgroundColor: theme.palette.common.main\r\n        }\r\n    }\r\n}))\r\n\r\nconst cardTitle = 'Reward'\r\nconst Reward = () => {\r\n\r\n    const classes = useStyles();\r\n    const { data: signer } = useSigner();\r\n    const { chain } = useNetwork();\r\n\r\n    const rewardsInUnderwriting = useSelector((state) => state.account.chainData.underwriting_reward);\r\n    const { claimStakingReward } = useWeb3Function();\r\n    const claimStakeReward = () => {\r\n        if (chain) {\r\n            claimStakingReward(chain.id, signer);\r\n        }\r\n    }\r\n    return (\r\n        <MainCard title={cardTitle} sx={{ minHeight: '85vh' }}>\r\n            <Grid container spacing={2} className={classes.rewardView}>\r\n                <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <Typography sx={{ marginLeft: '20px', fontSize: '18px' }}>You have {Number(trim(rewardsInUnderwriting, 3))} FAKTR rewards available now.</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <Card>\r\n                        <Typography sx={{ fontSize: '20px', my: 1 }}>Staking</Typography>\r\n                        <Typography sx={{ fontSize: '24px', my: 2 }}>{Number(trim(rewardsInUnderwriting, 3))} FAKTR</Typography>\r\n                        <Typography sx={{ fontSize: '16px' }}>Earn rewards by staking on projects you think are secure. 🔐</Typography>\r\n                        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                            {\r\n                                Number(rewardsInUnderwriting) > 0 ?\r\n                                    <Button className={classes.baseButton} onClick={claimStakeReward}>\r\n                                        Claim\r\n                                    </Button> :\r\n                                    <Link to='/underwriting'>\r\n                                        <Button className={classes.baseButton} onClick={claimStakeReward}>\r\n                                            Stake\r\n                                        </Button>\r\n                                    </Link>\r\n                            }\r\n                        </Box>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <Card>\r\n                        <Typography sx={{ fontSize: '20px', my: 1 }}>Claim Assessment</Typography>\r\n                        <Typography sx={{ fontSize: '24px', my: 2 }}>0 FAKTR</Typography>\r\n                        <Typography sx={{ fontSize: '16px', mb: 2.5 }}>Earn rewards by assessing claims. 🔍</Typography>\r\n                        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                            <Link to='/claim'>\r\n                                <Button className={classes.baseButton}>\r\n                                    View open Claims\r\n                                </Button>\r\n                            </Link>\r\n                        </Box>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <Card>\r\n                        <Typography sx={{ fontSize: '20px', my: 1 }}>Governance</Typography>\r\n                        <Typography sx={{ fontSize: '24px', my: 2 }}>0 FAKTR</Typography>\r\n                        <Typography sx={{ fontSize: '16px', mb: 2.5 }}>Earn Rewards by voting in governance. 🗳</Typography>\r\n                        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                            <Link to={{ pathname: 'https://snapshot.org' }} target=\"_blank\">\r\n                                <Button className={classes.baseButton}>\r\n                                    Vote\r\n                                </Button>\r\n                            </Link>\r\n                        </Box>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography sx={{ fontSize: '18px', mx: 2, mb: 2 }}>Rewards History</Typography>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>No</TableCell>\r\n                                    <TableCell>Transaction Hash</TableCell>\r\n                                    <TableCell>Date</TableCell>\r\n                                    <TableCell>Type</TableCell>\r\n                                    <TableCell>Claim Amount</TableCell>\r\n                                    <TableCell>Total Rewards To Date</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    )\r\n}\r\n\r\nexport default Reward;"],"sourceRoot":""}