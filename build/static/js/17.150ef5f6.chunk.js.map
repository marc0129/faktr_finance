{"version":3,"sources":["ui-component/cards/MainCard.js","helpers/trim.js","helpers/formatTimeStamp.js","views/dashboard/CoverList.js","views/dashboard/UnderwritingList.js","views/dashboard/ClaimList.js","views/dashboard/index.js"],"names":["headerSX","marginLeft","mr","MainCard","React","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","backgroundColor","variant","action","className","displayName","trim","number","precision","array","fromExponential","split","length","push","pop","substring","join","timestampToDate","millisecond","date","Date","getMonth","getDate","getFullYear","useStyle","makeStyles","theme","table","color","borderBottom","palette","common","mainLight","fontSize","whiteSpace","textAlign","CoverTable","protocols","classes","coverList","useSelector","state","account","chainData","covers","Fragment","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","map","item","index","filter","protocol","product_id","Number","productId","name","amount","createAt","period","padding","main","UnderwritingTable","underwritings","key","Button","ClaimTable","useStyles","dashboard","marginBottom","minHeight","tabs","textTransform","borderTopLeftRadius","borderTopRightRadius","paper","fontWeight","borderTop","tabContentBox","marginTop","borderBottomLeftRadius","borderBottomRightRadius","Dashboard","useState","tabValue","setTabValue","app","products","stats","useNetwork","chain","Grid","container","spacing","xs","md","Card","Typography","my","display","justifyContent","alignItems","Tabs","value","onChange","evt","Tab","label","disableRipple","Box"],"mappings":"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","file":"static/js/17.150ef5f6.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { Card, CardContent, CardHeader, Typography } from '@material-ui/core';\r\n\r\n// constant\r\nconst headerSX = {\r\n    marginLeft: '30px',\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n//-----------------------|| CUSTOM MAIN CARD ||-----------------------//\r\n\r\nconst MainCard = React.forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass,\r\n            contentSX,\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    backgroundColor: 'rgb(252 253 253)',\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={<Typography variant='cardTitle'>{title}</Typography>} action={secondary} />}\r\n\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nMainCard.displayName = 'MainCard';\r\nexport default MainCard;\r\n","import fromExponential from \"from-exponential\";\r\n\r\nexport const trim = (number, precision) => {\r\n    const array = fromExponential(number).split(\".\");\r\n    if (array.length === 1) return fromExponential(number);\r\n    //@ts-ignore\r\n    array.push(array.pop().substring(0, precision));\r\n    const trimmedNumber = array.join(\".\");\r\n    return trimmedNumber;\r\n};\r\n","export const timestampToDate = (millisecond) => {\r\n    const date = new Date(millisecond * 1000);\r\n    return (date.getMonth() + 1) + \"/\" + date.getDate() + \"/\" + date.getFullYear();\r\n}","import React from 'react';\r\nimport { TableCell, Table, TableHead, TableBody, TableRow, TableContainer } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useSelector } from 'react-redux';\r\n// import { ethers } from 'ethers';\r\nimport { timestampToDate } from '../../helpers/formatTimeStamp';\r\n\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    table: {\r\n        '& .MuiTableCell-root': {\r\n            color: '#666',\r\n            borderBottom: `1px solid ${theme.palette.common.mainLight}`,\r\n            fontSize: '12px',\r\n            whiteSpace: 'nowrap',\r\n            textAlign: 'center'\r\n        }\r\n    }\r\n}))\r\n\r\nconst CoverTable = ({ protocols }) => {\r\n\r\n    const classes = useStyle();\r\n\r\n    const coverList = useSelector(state => state.account.chainData.covers);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableContainer>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>ID</TableCell>\r\n                            <TableCell>TX_HASH</TableCell>\r\n                            <TableCell>PORJECT</TableCell>\r\n                            <TableCell>COVER AMOUNT</TableCell>\r\n                            <TableCell>TOKEN TYPE</TableCell>\r\n                            <TableCell>START DATE</TableCell>\r\n                            <TableCell>PERIOD</TableCell>\r\n                            <TableCell>STATUS</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {coverList?.map((item, index) => (\r\n                            <TableRow key={index}>\r\n                                <TableCell>{index + 1}</TableCell>\r\n                                <TableCell>TX_HASH</TableCell>\r\n                                <TableCell>\r\n                                    {(() => {\r\n                                        let productDetail = (protocols.filter(protocol => protocol.product_id === Number(item.productId)))[0];\r\n                                        return productDetail.name\r\n                                    })()}\r\n                                </TableCell>\r\n                                <TableCell>{Number(item.amount)}</TableCell>\r\n                                <TableCell>MATIC</TableCell>\r\n                                <TableCell>{timestampToDate(Number(item.createAt))}</TableCell>\r\n                                <TableCell>{Number(item.period)}</TableCell>\r\n                                <TableCell>ACTIVE</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </React.Fragment >\r\n    )\r\n}\r\n\r\nexport default CoverTable;","import React from 'react';\r\nimport { TableCell, Table, TableHead, TableBody, TableRow, TableContainer, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useSelector } from 'react-redux';\r\nimport { ethers } from 'ethers';\r\nimport { trim } from '../../helpers/trim';\r\n\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    table: {\r\n        '& .MuiTableCell-root': {\r\n            color: '#666',\r\n            borderBottom: `1px solid ${theme.palette.common.mainLight}`,\r\n            fontSize: '12px',\r\n            whiteSpace: 'nowrap',\r\n            textAlign: 'center'\r\n        },\r\n        '& .MuiButton-root': {\r\n            padding: '2px',\r\n            color: theme.palette.common.main,\r\n            backgroundColor: theme.palette.common.mainLight\r\n        }\r\n    }\r\n}))\r\n\r\nconst UnderwritingTable = ({ protocols }) => {\r\n\r\n    const classes = useStyle();\r\n    const underwritings = useSelector(state => state.account.chainData.underwritings);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableContainer>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>ID</TableCell>\r\n                            <TableCell>TX_HASH</TableCell>\r\n                            <TableCell>PORJECT</TableCell>\r\n                            <TableCell>STAKE AMOUNT</TableCell>\r\n                            <TableCell>STAKED AT</TableCell>\r\n                            <TableCell>ACTION</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            underwritings?.map((item, key) => (\r\n                                <TableRow key={key}>\r\n                                    <TableCell>{key + 1}</TableCell>\r\n                                    <TableCell>TX_HASH</TableCell>\r\n                                    <TableCell>\r\n                                        {(() => {\r\n                                            let productDetail = (protocols.filter(protocol => protocol.product_id === Number(item.productId)))[0];\r\n                                            return productDetail.name;\r\n                                        })()}\r\n                                    </TableCell>\r\n                                    <TableCell>{trim(item.amount, 2)} FAKTR</TableCell>\r\n                                    <TableCell>4/10/2022</TableCell>\r\n                                    <TableCell><Button>Withdraw</Button></TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UnderwritingTable;","import React from 'react';\r\nimport { TableCell, Table, TableHead, TableBody, TableRow, TableContainer } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    table: {\r\n        '& .MuiTableCell-root': {\r\n            color: '#666',\r\n            borderBottom: `1px solid ${theme.palette.common.mainLight}`,\r\n            fontSize: '12px',\r\n            whiteSpace: 'nowrap'\r\n        }\r\n    }\r\n}))\r\n\r\nconst ClaimTable = () => {\r\n\r\n    const classes = useStyle();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableContainer>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>No</TableCell>\r\n                            <TableCell>Transaction Hash</TableCell>\r\n                            <TableCell>Date</TableCell>\r\n                            <TableCell>Type</TableCell>\r\n                            <TableCell>Claim Amount</TableCell>\r\n                            <TableCell>Total Rewards To Date</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ClaimTable;","import { Card, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport React from 'react';\r\nimport MainCard from '../../ui-component/cards/MainCard';\r\nimport { Tabs, Tab, Box } from '@material-ui/core';\r\nimport CoverTable from './CoverList';\r\nimport UnderwritingTable from './UnderwritingList';\r\nimport ClaimTable from './ClaimList';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNetwork } from 'wagmi';\r\n\r\nconst cardTitle = 'Welcome to faktr finance.';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dashboard: {\r\n        marginBottom: '30px',\r\n        '& .MuiCard-root': {\r\n            minHeight: '200px',\r\n            padding: '20px',\r\n            backgroundColor: '#fff',\r\n            border: `1px solid ${theme.palette.common.mainLight}`\r\n        }\r\n    },\r\n    tabs: {\r\n        '& .MuiTab-root': {\r\n            textTransform: 'none',\r\n            fontSize: '16px',\r\n            color: '#666',\r\n            borderTopLeftRadius: '15px',\r\n            borderTopRightRadius: '15px',\r\n            border: `1px solid ${theme.palette.common.mainLight}`,\r\n            backgroundColor: theme.palette.common.paper\r\n        },\r\n        '& .MuiTab-root.Mui-selected': {\r\n            padding: '20px',\r\n            fontWeight: 'bold',\r\n            color: '#666',\r\n            borderTopLeftRadius: '15px',\r\n            borderTopRightRadius: '15px',\r\n            border: `1px solid ${theme.palette.common.mainLight}`,\r\n            borderTop: `4px solid ${theme.palette.common.main}`,\r\n            backgroundColor: theme.palette.common.paper\r\n        },\r\n        '& .MuiTabs-indicator': {\r\n            backgroundColor: '#fff'\r\n        }\r\n    },\r\n    tabContentBox: {\r\n        marginTop: '-2px',\r\n        minHeight: '50vh',\r\n        border: `1px solid ${theme.palette.common.mainLight}`,\r\n        backgroundColor: theme.palette.common.paper,\r\n        borderTopRightRadius: '20px',\r\n        borderBottomLeftRadius: '20px',\r\n        borderBottomRightRadius: '20px'\r\n    }\r\n}))\r\n\r\nconst Dashboard = () => {\r\n\r\n    const classes = useStyles();\r\n    const [tabValue, setTabValue] = useState('cover');\r\n    const protocols = useSelector(state => state.app.products);\r\n    const stats = useSelector(state => state.app.stats);\r\n    const { chain } = useNetwork();\r\n\r\n\r\n    return (\r\n        <MainCard title={cardTitle} sx={{ minHeight: '85vh' }}>\r\n            <Grid container spacing={2} className={classes.dashboard}>\r\n                <Grid item xs={12} md={4}>\r\n                    <Card>\r\n                        <Typography sx={{ fontSize: '20px', my: 1 }}>Fakt Token Price </Typography>\r\n                        <Typography sx={{ fontSize: '20px', my: 1 }}>{ }</Typography>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <Card>\r\n                        <Typography sx={{ fontSize: '20px', my: 1 }}>Active Cover Policy Value</Typography>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <Card>\r\n                        <Typography sx={{ fontSize: '20px', my: 1 }}>Total Fakt Staked </Typography>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item xs={12} display='flex' justifyContent='space-between' alignItems='center'>\r\n                    <Tabs\r\n                        value={tabValue}\r\n                        onChange={(evt, value) => setTabValue(value)}\r\n                        className={classes.tabs}\r\n                    >\r\n                        <Tab label='Covers' disableRipple value='cover' />\r\n                        <Tab label='Underwriting' disableRipple value='underwriting' />\r\n                        <Tab label='Claims' disableRipple value='claim' />\r\n                    </Tabs>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Box className={classes.tabContentBox}>\r\n                        {(() => {\r\n                            if (tabValue === 'cover')\r\n                                return (\r\n                                    <CoverTable protocols={protocols} />\r\n                                )\r\n                            else if (tabValue === 'underwriting')\r\n                                return (\r\n                                    <UnderwritingTable protocols={protocols} />\r\n                                )\r\n                            else if (tabValue === 'claim')\r\n                                return (\r\n                                    <ClaimTable />\r\n                                )\r\n                        })()}\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    )\r\n}\r\n\r\nexport default Dashboard;"],"sourceRoot":""}