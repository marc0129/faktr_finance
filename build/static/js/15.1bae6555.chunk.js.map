{"version":3,"sources":["ui-component/cards/MainCard.js","../node_modules/@material-ui/core/Card/cardClasses.js","../node_modules/@material-ui/core/Card/Card.js","../node_modules/@material-ui/core/CardHeader/cardHeaderClasses.js","../node_modules/@material-ui/core/CardHeader/CardHeader.js","../node_modules/@material-ui/core/CardContent/cardContentClasses.js","../node_modules/@material-ui/core/CardContent/CardContent.js","views/governance/index.js"],"names":["headerSX","marginLeft","mr","MainCard","React","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","backgroundColor","variant","action","className","displayName","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","Card","inProps","useThemeProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardHeaderUtilityClass","cardHeaderClasses","CardHeaderRoot","subheader","display","alignItems","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","CardHeader","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","type","Typography","color","_jsxs","as","getCardContentUtilityClass","CardContentRoot","paddingBottom","CardContent","Governance","minHeight"],"mappings":"sVAMMA,EAAW,CACbC,WAAY,OACZ,0BAA2B,CAAEC,GAAI,IAK/BC,EAAWC,IAAMC,YACnB,WAeIC,GACC,EAdGC,OAcH,EAbGC,UAaF,IAZEC,EAYH,EAZGA,SAYH,IAXGC,eAWH,SAVGC,EAUH,EAVGA,aACAC,EASH,EATGA,UACAC,EAQH,EARGA,UACAC,EAOH,EAPGA,UAOH,KANGC,OAMH,EALGC,WAKH,MALQ,GAKR,EAJGC,EAIH,EAJGA,MACGC,EAGN,iBAED,OACI,eAAC,IAAD,yBACIZ,IAAKA,GACDY,GAFR,IAGIF,GAAE,aACEG,gBAAiB,oBACdH,GALX,WASMH,GAAaI,GAAS,cAAC,IAAD,CAAYD,GAAIhB,EAAUiB,MAAO,cAAC,IAAD,CAAYG,QAAQ,YAApB,SAAiCH,IAAqBI,OAAQP,IAItHJ,GACG,cAAC,IAAD,CAAaM,GAAIJ,EAAWU,UAAWX,EAAvC,SACKF,KAGPC,GAAWD,SAoB7BN,EAASoB,YAAc,WACRpB,O,uHCvER,SAASqB,EAAoBC,GAClC,OAAOC,YAAqB,UAAWD,GAErBE,YAAuB,UAAW,CAAC,SAAvD,I,OCFMC,EAAY,CAAC,YAAa,UAsB1BC,EAAWC,YAAOC,IAAO,CAC7BC,KAAM,UACNP,KAAM,OACNQ,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,OAH9BN,EAId,WACD,MAAO,CACLO,SAAU,aAGRC,EAAoBlC,cAAiB,SAAcmC,EAASjC,GAChE,IAAM4B,EAAQM,YAAc,CAC1BN,MAAOK,EACPP,KAAM,YAINV,EAEEY,EAFFZ,UADF,EAGIY,EADFO,cAFF,SAIMC,EAAQC,YAA8BT,EAAON,GAE7CgB,EAAaC,YAAS,GAAIX,EAAO,CACrCO,WAGIK,EAnCkB,SAAAF,GACxB,IACEE,EACEF,EADFE,QAKF,OAAOC,YAHO,CACZX,KAAM,CAAC,SAEoBZ,EAAqBsB,GA4BlCE,CAAkBJ,GAClC,OAAoBK,cAAKpB,EAAUgB,YAAS,CAC1CvB,UAAW4B,kBAAKJ,EAAQV,KAAMd,GAC9B6B,UAAWV,EAAS,OAAIW,EACxB9C,IAAKA,EACLsC,WAAYA,GACXF,OA0CUJ,O,+HChGR,SAASe,EAA0B5B,GACxC,OAAOC,YAAqB,gBAAiBD,GAE/C,IACe6B,EADW3B,YAAuB,gBAAiB,CAAC,OAAQ,SAAU,SAAU,UAAW,QAAS,c,OCF7GC,EAAY,CAAC,SAAU,SAAU,YAAa,YAAa,oBAAqB,YAAa,2BAA4B,QAAS,wBA2BlI2B,EAAiBzB,YAAO,MAAO,CACnCE,KAAM,gBACNP,KAAM,OACNQ,kBAAmB,SAACC,EAAOC,GAAR,aAAmBU,aAAQ,gCACrCS,EAAkBrC,OAAUkB,EAAOlB,OADE,2BAErCqC,EAAkBE,WAAcrB,EAAOqB,WAFF,GAG3CrB,EAAOC,QANWN,CAOpB,CACD2B,QAAS,OACTC,WAAY,SACZC,QAAS,KAELC,EAAmB9B,YAAO,MAAO,CACrCE,KAAM,gBACNP,KAAM,SACNQ,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAO0B,SAHtB/B,CAItB,CACD2B,QAAS,OACTK,KAAM,WACNC,YAAa,KAETC,EAAmBlC,YAAO,MAAO,CACrCE,KAAM,gBACNP,KAAM,SACNQ,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOd,SAHtBS,CAItB,CACDgC,KAAM,WACNG,UAAW,aACXC,WAAY,EACZH,aAAc,EACdI,cAAe,IAEXC,EAAoBtC,YAAO,MAAO,CACtCE,KAAM,gBACNP,KAAM,UACNQ,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOzB,UAHrBoB,CAIvB,CACDgC,KAAM,aAEFO,EAA0BjE,cAAiB,SAAoBmC,EAASjC,GAC5E,IAAM4B,EAAQM,YAAc,CAC1BN,MAAOK,EACPP,KAAM,kBAINX,EASEa,EATFb,OACAwC,EAQE3B,EARF2B,OACAvC,EAOEY,EAPFZ,UAHF,EAUIY,EANFoC,iBAJF,MAIc,MAJd,IAUIpC,EALFqC,yBALF,SAMaC,EAITtC,EAJFsB,UACAiB,EAGEvC,EAHFuC,yBACOC,EAELxC,EAFFjB,MACA0D,EACEzC,EADFyC,qBAEIjC,EAAQC,YAA8BT,EAAON,GAE7CgB,EAAaC,YAAS,GAAIX,EAAO,CACrCoC,YACAC,sBAGIzB,EA9EkB,SAAAF,GACxB,IACEE,EACEF,EADFE,QAUF,OAAOC,YARO,CACZX,KAAM,CAAC,QACPyB,OAAQ,CAAC,UACTxC,OAAQ,CAAC,UACTX,QAAS,CAAC,WACVO,MAAO,CAAC,SACRuC,UAAW,CAAC,cAEeH,EAA2BP,GAkExCE,CAAkBJ,GAC9B3B,EAAQyD,EAEC,MAATzD,GAAiBA,EAAM2D,OAASC,KAAeN,IACjDtD,EAAqBgC,cAAK4B,IAAYhC,YAAS,CAC7CzB,QAASyC,EAAS,QAAU,KAC5BvC,UAAWwB,EAAQ7B,MACnBqD,UAAW,OACXb,QAAS,SACRkB,EAAsB,CACvBlE,SAAUQ,MAId,IAAIuC,EAAYgB,EAchB,OAZiB,MAAbhB,GAAqBA,EAAUoB,OAASC,KAAeN,IACzDf,EAAyBP,cAAK4B,IAAYhC,YAAS,CACjDzB,QAASyC,EAAS,QAAU,QAC5BvC,UAAWwB,EAAQU,UACnBsB,MAAO,iBACPR,UAAW,OACXb,QAAS,SACRgB,EAA0B,CAC3BhE,SAAU+C,MAIMuB,eAAMxB,EAAgBV,YAAS,CACjDvB,UAAW4B,kBAAKJ,EAAQV,KAAMd,GAC9B0D,GAAIV,EACJhE,IAAKA,EACLsC,WAAYA,GACXF,EAAO,CACRjC,SAAU,CAACoD,GAAuBZ,cAAKW,EAAkB,CACvDtC,UAAWwB,EAAQe,OACnBjB,WAAYA,EACZnC,SAAUoD,IACKkB,eAAMX,EAAmB,CACxC9C,UAAWwB,EAAQpC,QACnBkC,WAAYA,EACZnC,SAAU,CAACQ,EAAOuC,KAChBnC,GAAuB4B,cAAKe,EAAkB,CAChD1C,UAAWwB,EAAQzB,OACnBuB,WAAYA,EACZnC,SAAUY,WAiFDgD,O,8GCzNR,SAASY,EAA2BxD,GACzC,OAAOC,YAAqB,iBAAkBD,GAErBE,YAAuB,iBAAkB,CAAC,SAArE,I,OCFMC,EAAY,CAAC,YAAa,aAoB1BsD,EAAkBpD,YAAO,MAAO,CACpCE,KAAM,iBACNP,KAAM,OACNQ,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,OAHvBN,EAIrB,WACD,MAAO,CACL6B,QAAS,GACT,eAAgB,CACdwB,cAAe,QAIfC,EAA2BhF,cAAiB,SAAqBmC,EAASjC,GAC9E,IAAM4B,EAAQM,YAAc,CAC1BN,MAAOK,EACPP,KAAM,mBAINV,EAEEY,EAFFZ,UADF,EAGIY,EADFoC,iBAFF,MAEc,MAFd,EAIM5B,EAAQC,YAA8BT,EAAON,GAE7CgB,EAAaC,YAAS,GAAIX,EAAO,CACrCoC,cAGIxB,EAtCkB,SAAAF,GACxB,IACEE,EACEF,EADFE,QAKF,OAAOC,YAHO,CACZX,KAAM,CAAC,SAEoB6C,EAA4BnC,GA+BzCE,CAAkBJ,GAClC,OAAoBK,cAAKiC,EAAiBrC,YAAS,CACjDmC,GAAIV,EACJhD,UAAW4B,kBAAKJ,EAAQV,KAAMd,GAC9BsB,WAAYA,EACZtC,IAAKA,GACJoC,OAoCU0C,O,iCC5Ff,gCAceC,UATI,WAEf,OACI,cAAC,IAAD,CAAUpE,MALA,oEAKkBD,GAAI,CAAEsE,UAAW","file":"static/js/15.1bae6555.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { Card, CardContent, CardHeader, Typography } from '@material-ui/core';\r\n\r\n// constant\r\nconst headerSX = {\r\n    marginLeft: '30px',\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n//-----------------------|| CUSTOM MAIN CARD ||-----------------------//\r\n\r\nconst MainCard = React.forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass,\r\n            contentSX,\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    backgroundColor: 'rgb(252 253 253)',\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={<Typography variant='cardTitle'>{title}</Typography>} action={secondary} />}\r\n\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nMainCard.displayName = 'MainCard';\r\nexport default MainCard;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('Material-UI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Card;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","import React from 'react';\r\nimport MainCard from '../../ui-component/cards/MainCard';\r\n\r\nconst cardTitle = 'Vote on governance proposals to decide the future of the protocol';\r\n\r\nconst Governance = () => {\r\n\r\n    return (\r\n        <MainCard title={cardTitle} sx={{ minHeight: '85vh' }}>\r\n\r\n        </MainCard>\r\n    )\r\n}\r\n\r\nexport default Governance;"],"sourceRoot":""}