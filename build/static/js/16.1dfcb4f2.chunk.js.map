{"version":3,"sources":["ui-component/cards/MainCard.js","helpers/trim.js","../node_modules/@material-ui/system/esm/Box/Box.js","views/claim/ClaimListTable.js","views/claim/AssessmentTable.js","views/claim/Stake.js","views/claim/index.js"],"names":["headerSX","marginLeft","mr","MainCard","React","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","backgroundColor","variant","action","className","displayName","trim","number","precision","array","fromExponential","split","length","push","pop","substring","join","Box","createBox","useStyle","makeStyles","theme","table","color","borderBottom","palette","common","mainLight","fontSize","whiteSpace","ClaimListTable","classes","Fragment","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","AssessmentTable","vStakeInput","maxWidth","borderRadius","borderColor","textAlign","inputTitle","zIndex","position","top","left","valueTitle","bottom","right","stakeButton","minWidth","marginTop","margin","paddingRight","paddingLeft","main","paper","Stake","useState","vStake","setStake","vPeriod","setPeriod","Grid","container","p","mb","item","xs","mt","Typography","ml","md","lineHeight","px","display","direction","justifyContent","alignItems","component","OutlinedInput","py","endAdornment","pl","value","onChange","e","target","fullWidth","type","inputProps","min","flexDirection","Button","tabs","textTransform","borderTopLeftRadius","borderTopRightRadius","padding","fontWeight","borderTop","tabContentBox","minHeight","borderBottomLeftRadius","borderBottomRightRadius","helpButton","breakpoints","down","Claim","tabValue","setTabValue","Tabs","evt","Tab","label","disableRipple"],"mappings":"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","file":"static/js/16.1dfcb4f2.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { Card, CardContent, CardHeader, Typography } from '@material-ui/core';\r\n\r\n// constant\r\nconst headerSX = {\r\n    marginLeft: '30px',\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n//-----------------------|| CUSTOM MAIN CARD ||-----------------------//\r\n\r\nconst MainCard = React.forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass,\r\n            contentSX,\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    backgroundColor: 'rgb(252 253 253)',\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={<Typography variant='cardTitle'>{title}</Typography>} action={secondary} />}\r\n\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nMainCard.displayName = 'MainCard';\r\nexport default MainCard;\r\n","import fromExponential from \"from-exponential\";\r\n\r\nexport const trim = (number, precision) => {\r\n    const array = fromExponential(number).split(\".\");\r\n    if (array.length === 1) return fromExponential(number);\r\n    //@ts-ignore\r\n    array.push(array.pop().substring(0, precision));\r\n    const trimmedNumber = array.join(\".\");\r\n    return trimmedNumber;\r\n};\r\n","import createBox from '../createBox';\nconst Box = createBox();\nexport default Box;","import React from 'react';\r\nimport { TableCell, Table, TableHead, TableBody, TableRow, TableContainer } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    table: {\r\n        '& .MuiTableCell-root': {\r\n            color: '#666',\r\n            borderBottom: `1px solid ${theme.palette.common.mainLight}`,\r\n            fontSize: '12px',\r\n            whiteSpace: 'nowrap'\r\n        }\r\n    }\r\n}))\r\n\r\nconst ClaimListTable = () => {\r\n\r\n    const classes = useStyle();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableContainer>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>ID</TableCell>\r\n                            <TableCell>PORJECT</TableCell>\r\n                            <TableCell>COVER AMOUNT</TableCell>\r\n                            <TableCell>COVER PERIOD</TableCell>\r\n                            <TableCell>STATUS</TableCell>\r\n                            <TableCell>ACTION</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ClaimListTable;","import React from 'react';\r\nimport { TableCell, Table, TableHead, TableBody, TableRow, TableContainer } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    table: {\r\n        '& .MuiTableCell-root': {\r\n            color: '#666',\r\n            borderBottom: `1px solid ${theme.palette.common.mainLight}`,\r\n            fontSize: '12px',\r\n            whiteSpace: 'nowrap'\r\n        }\r\n    }\r\n}))\r\n\r\nconst AssessmentTable = () => {\r\n\r\n    const classes = useStyle();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableContainer>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>ID</TableCell>\r\n                            <TableCell>PORJECT</TableCell>\r\n                            <TableCell>COVER AMOUNT</TableCell>\r\n                            <TableCell>COVER PERIOD</TableCell>\r\n                            <TableCell>STATUS</TableCell>\r\n                            <TableCell>ACTION</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AssessmentTable;","import React from 'react';\r\nimport { Grid, Typography, OutlinedInput, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Box } from '@material-ui/system';\r\nimport { trim } from '../../helpers/trim';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    vStakeInput: {\r\n        maxWidth: '350px',\r\n        borderRadius: '25px',\r\n        backgroundColor: '#fff',\r\n        '& .MuiOutlinedInput-notchedOutline': {\r\n            borderColor: theme.palette.common.mainLight\r\n        },\r\n        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n            borderColor: theme.palette.common.mainLight\r\n        },\r\n        '&:hover': {\r\n            '& .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.common.mainLight\r\n            }\r\n        },\r\n        '& input': {\r\n            color: '#666',\r\n            fontSize: '24px',\r\n            textAlign: 'right'\r\n        }\r\n\r\n\r\n    },\r\n    inputTitle: {\r\n        zIndex: 1,\r\n        color: '#666',\r\n        //  backgroundColor: theme.palette.orange.light,\r\n        position: 'absolute',\r\n        top: 10,\r\n        left: 20,\r\n        fontSize: '16px'\r\n    },\r\n    valueTitle: {\r\n        zIndex: 1,\r\n        color: '#666',\r\n        //  backgroundColor: theme.palette.orange.light,\r\n        position: 'absolute',\r\n        bottom: 10,\r\n        right: 30,\r\n        fontSize: '16px'\r\n    },\r\n    stakeButton: {\r\n        minWidth: '150px',\r\n        marginTop: 20,\r\n        margin: 10,\r\n        paddingRight: 15,\r\n        paddingLeft: 15,\r\n        borderRadius: 15,\r\n        fontSize: '16px',\r\n        backgroundColor: theme.palette.common.main,\r\n        color: theme.palette.common.paper,\r\n        '&:hover': {\r\n            color: theme.palette.common.paper,\r\n            backgroundColor: theme.palette.common.main\r\n        }\r\n    }\r\n}))\r\n\r\nconst Stake = () => {\r\n\r\n    const classes = useStyle();\r\n\r\n    const [vStake, setStake] = React.useState(0);\r\n    const [vPeriod, setPeriod] = React.useState(30);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container p={3} mb={5}>\r\n                <Grid item xs={12} mt={3}>\r\n                    <Typography sx={{ fontSize: '24px', mb: 3, ml: 1, color: '#666' }}>\r\n                        Become a claims assessor\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <Typography sx={{ fontSize: '16px', lineHeight: '36px', color: '#666' }}>\r\n                        To earn reward as a claims assessor you need to stake an amount of FAKTR for 30 days minimum. Your verdict power and rewards are proportional to your stake and for the specified period you can not sell these tokens or use them for other purposes. If the Advisory Board deems voting to be fraudulent, they have the power to burn this amount.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid container item xs={12} md={6} px={3}>\r\n                    <Grid container item xs={12} display=\"flex\" direction='column' justifyContent='start' alignItems='start' ml={2}>\r\n                        <Box sx={{ position: 'relative', mb: 3 }}>\r\n                            <Typography component='span' className={classes.inputTitle}>Stake Amount</Typography>\r\n                            <OutlinedInput\r\n                                sx={{ py: 4, px: 2 }}\r\n                                endAdornment={<Typography pl={3}>FAKTR</Typography>}\r\n                                value={vStake}\r\n                                onChange={(e) => setStake(e.target.value)}\r\n                                className={classes.vStakeInput}\r\n                                fullWidth\r\n                                type='number'\r\n                                inputProps={{ min: 0 }}\r\n                            >\r\n\r\n                            </OutlinedInput>\r\n                            <Typography className={classes.valueTitle}>Stake Value: ${trim(vStake * 0.4, 3)}</Typography>\r\n                        </Box>\r\n                        <Box sx={{ position: 'relative', mb: 3 }}>\r\n                            <Typography component='span' className={classes.inputTitle}>Stake Period</Typography>\r\n                            <OutlinedInput\r\n                                sx={{ py: 4, px: 2 }}\r\n                                endAdornment={<Typography pl={3}>DAYS</Typography>}\r\n                                value={vPeriod}\r\n                                onChange={(e) => setPeriod(e.target.value)}\r\n                                className={classes.vStakeInput}\r\n                                fullWidth\r\n                                type='number'\r\n                                inputProps={{ min: 30 }}\r\n                            >\r\n                            </OutlinedInput>\r\n                            <Typography className={classes.valueTitle}>Stake Period Ends: </Typography>\r\n                        </Box>\r\n                    </Grid>\r\n                    {/* <Grid item xs={12}>\r\n                        <Box>\r\n                            <Typography sx={{ fontSize: '16px', mb: 2 }}>You need to stake FAKTR tokens at least 30 days to become a claim accessor</Typography>\r\n                        </Box>\r\n                        <Box>\r\n                            <Typography sx={{ fontSize: '16px' }}>Approve FAKTR tokens to grant the token controller permission </Typography>\r\n                        </Box>\r\n                    </Grid> */}\r\n                    <Grid item xs={12} display='flex' justifyContent='center' sx={{ flexDirection: { xs: 'column', md: 'row' } }}>\r\n                        <Button className={classes.stakeButton}>Approve FAKTR</Button>\r\n                        <Button className={classes.stakeButton}>Stake</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Stake;","import React, { useState } from 'react';\r\nimport MainCard from '../../ui-component/cards/MainCard';\r\nimport { Tabs, Tab, Grid, Box, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport ClaimListTable from './ClaimListTable';\r\nimport AssessmentTable from './AssessmentTable';\r\nimport Stake from './Stake';\r\n\r\nconst cardTitle = 'Earn rewards by becoming Faktr finance claim accessor';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    tabs: {\r\n        '& .MuiTab-root': {\r\n            textTransform: 'none',\r\n            fontSize: '16px',\r\n            color: '#666',\r\n            borderTopLeftRadius: '15px',\r\n            borderTopRightRadius: '15px',\r\n            border: `1px solid ${theme.palette.common.mainLight}`,\r\n            backgroundColor: theme.palette.common.paper\r\n        },\r\n        '& .MuiTab-root.Mui-selected': {\r\n            padding: '20px',\r\n            fontWeight: 'bold',\r\n            color: '#666',\r\n            borderTopLeftRadius: '15px',\r\n            borderTopRightRadius: '15px',\r\n            border: `1px solid ${theme.palette.common.mainLight}`,\r\n            borderTop: `4px solid ${theme.palette.common.main}`,\r\n            backgroundColor: theme.palette.common.paper\r\n        },\r\n        '& .MuiTabs-indicator': {\r\n            backgroundColor: '#fff'\r\n        }\r\n    },\r\n    tabContentBox: {\r\n        marginTop: '-2px',\r\n        minHeight: '70vh',\r\n        border: `1px solid ${theme.palette.common.mainLight}`,\r\n        backgroundColor: theme.palette.common.paper,\r\n        borderTopRightRadius: '20px',\r\n        borderBottomLeftRadius: '20px',\r\n        borderBottomRightRadius: '20px'\r\n    },\r\n    helpButton: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'none'\r\n        },\r\n        marginRight: '30px',\r\n        padding: '10px',\r\n        fontWeight: 'bold',\r\n        backgroundColor: theme.palette.common.main,\r\n        color: '#fff',\r\n        borderRadius: '15px',\r\n        height: '40px',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.common.main\r\n        }\r\n    }\r\n}));\r\n\r\nconst Claim = () => {\r\n\r\n    const [tabValue, setTabValue] = useState('stake');\r\n\r\n    const classes = useStyle();\r\n\r\n    return (\r\n        <MainCard title={cardTitle} sx={{ minHeight: '88vh' }}>\r\n            <Grid container>\r\n                <Grid item xs={12} display='flex' justifyContent='space-between' alignItems='center'>\r\n                    <Tabs\r\n                        value={tabValue}\r\n                        onChange={(evt, value) => setTabValue(value)}\r\n                        className={classes.tabs}\r\n                    >\r\n                        <Tab label='Claims' disableRipple value='claims' />\r\n                        <Tab label='Assessments' disableRipple value='assessment' />\r\n                        <Tab label='Stake' disableRipple value='stake' />\r\n                    </Tabs>\r\n                    <Button className={classes.helpButton}>Request Claim</Button>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Box className={classes.tabContentBox}>\r\n                        {(() => {\r\n                            if (tabValue === 'claims')\r\n                                return (\r\n                                    <ClaimListTable />\r\n                                )\r\n                            else if (tabValue === 'assessment')\r\n                                return (\r\n                                    <AssessmentTable />\r\n                                )\r\n                            else if (tabValue === 'stake')\r\n                                return (\r\n                                    <Stake />\r\n                                )\r\n                        })()}\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    )\r\n}\r\n\r\nexport default Claim;"],"sourceRoot":""}